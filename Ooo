import time
import subprocess
import win32gui
import win32con
import win32api
from PIL import ImageGrab
import pytesseract
import cv2
import numpy as np

def find_window(title):
    def enum_windows_proc(hwnd, result_list):
        if win32gui.IsWindowVisible(hwnd) and title in win32gui.GetWindowText(hwnd):
            result_list.append(hwnd)
    hwnd_list = []
    win32gui.EnumWindows(enum_windows_proc, hwnd_list)
    return hwnd_list

def click_button_in_window(hwnd, button_text):
    def callback(hwnd, lParam):
        if win32gui.GetWindowText(hwnd) == button_text:
            win32api.SendMessage(hwnd, win32con.BM_CLICK, 0, 0)
        return True

    win32gui.EnumChildWindows(hwnd, callback, None)

def press_enter_until_upload_appears():
    while True:
        # Nhấn Enter
        win32api.keybd_event(win32con.VK_RETURN, 0, 0, 0)
        win32api.keybd_event(win32con.VK_RETURN, 0, win32con.KEYEVENTF_KEYUP, 0)
        time.sleep(1)  # Chờ 1 giây giữa các lần nhấn

        # Kiểm tra xem cửa sổ 'Upload' đã xuất hiện chưa
        upload_windows = find_window('Upload')
        if upload_windows:
            return upload_windows[0]

def get_count_text(hwnd):
    # Xác định tọa độ của khu vực "Count"
    left, top, right, bottom = win32gui.GetWindowRect(hwnd)
    count_box = (left + 110, top + 40, left + 320, top + 80)  # Tùy chỉnh tọa độ này

    # Chụp ảnh màn hình của khu vực "Count"
    screenshot = ImageGrab.grab(bbox=count_box)
    screenshot_np = np.array(screenshot)

    # Hiển thị ảnh sử dụng OpenCV
    cv2.imshow('Count Area', cv2.cvtColor(screenshot_np, cv2.COLOR_BGR2RGB))
    cv2.waitKey(0)
    cv2.destroyAllWindows()

    # Sử dụng OCR để nhận diện văn bản từ ảnh
    count_text = pytesseract.image_to_string(screenshot)

    return count_text

def extract_counts(count_text):
    # Tách số lượng Pass và Fail từ văn bản nhận diện được
    pass_count = 0
    fail_count = 0

    if "P:" in count_text and "F:" in count_text:
        parts = count_text.split()
        for part in parts:
            if part.startswith("P:"):
                pass_count = int(part.split(":")[1])
            elif part.startswith("F:"):
                fail_count = int(part.split(":")[1])

    return pass_count, fail_count

def open_program_and_click():
    # Mở chương trình (thay thế 'your_program.exe' bằng đường dẫn thực tế đến chương trình của bạn)
    subprocess.Popen(['your_program.exe'])
    
    # Chờ chương trình mở hoàn toàn (tùy chỉnh thời gian chờ theo thực tế)
    time.sleep(10)
    
    # Tìm cửa sổ của chương trình bằng tên của nó (thay thế 'Station_Test testing tool' bằng tiêu đề cửa sổ của chương trình của bạn)
    hwnd_list = find_window('Station_Test testing tool')
    
    if hwnd_list:
        hwnd = hwnd_list[0]
        # Click nút "offline" trong cửa sổ (thay thế 'Offline' bằng text của nút trong giao diện người dùng của bạn)
        click_button_in_window(hwnd, 'Offline')

        # Nhấn Enter cho đến khi cửa sổ 'Upload' xuất hiện
        upload_hwnd = press_enter_until_upload_appears()

        if upload_hwnd:
            initial_pass_count, initial_fail_count = extract_counts(get_count_text(upload_hwnd))

            while True:
                # Click nút 'Start' trong cửa sổ 'Upload'
                click_button_in_window(upload_hwnd, 'Start')
                time.sleep(5)  # Chờ để trạng thái cập nhật

                # Kiểm tra trạng thái
                current_pass_count, current_fail_count = extract_counts(get_count_text(upload_hwnd))

                if current_pass_count > initial_pass_count:
                    print("Trạng thái: Pass - Đóng chương trình")
                    # Đóng chương trình
                    win32api.PostMessage(hwnd, win32con.WM_CLOSE, 0, 0)
                    break
                elif current_fail_count > initial_fail_count:
                    print("Trạng thái: Fail - Thử lại")
                    initial_fail_count = current_fail_count
                else:
                    print("Trạng thái không xác định, thử lại")
    else:
        print("Không tìm thấy cửa sổ chương trình")

# Gọi hàm ngay lập tức để thử nghiệm
open_program_and_click()

import cv2
import numpy as np
from PIL import ImageGrab
import subprocess
import time
import win32gui
import win32con
import win32api

# Đường dẫn đến các hình mẫu
template_pass_path = "/mnt/data/file-7U13S4TpAoaBWLBsGLAtwJwm"  # Thay thế bằng đường dẫn đúng của bạn
template_fail_path = "/mnt/data/file-acjgYVf7XdWgY0y4BgxQ7x8I"  # Thay thế bằng đường dẫn đúng của bạn

# Đọc các hình mẫu
template_pass = cv2.imread(template_pass_path)
template_fail = cv2.imread(template_fail_path)

def find_window(title):
    def enum_windows_proc(hwnd, result_list):
        if win32gui.IsWindowVisible(hwnd) and title in win32gui.GetWindowText(hwnd):
            result_list.append(hwnd)
    hwnd_list = []
    win32gui.EnumWindows(enum_windows_proc, hwnd_list)
    return hwnd_list

def click_button_in_window(hwnd, button_text):
    def callback(hwnd, lParam):
        if win32gui.GetWindowText(hwnd) == button_text:
            win32api.SendMessage(hwnd, win32con.BM_CLICK, 0, 0)
        return True

    win32gui.EnumChildWindows(hwnd, callback, None)

def press_enter_until_upload_appears():
    while True:
        # Nhấn Enter
        win32api.keybd_event(win32con.VK_RETURN, 0, 0, 0)
        win32api.keybd_event(win32con.VK_RETURN, 0, win32con.KEYEVENTF_KEYUP, 0)
        time.sleep(1)  # Chờ 1 giây giữa các lần nhấn

        # Kiểm tra xem cửa sổ 'Upload' đã xuất hiện chưa
        upload_windows = find_window('Upload')
        if upload_windows:
            return upload_windows[0]

def capture_status_image(hwnd):
    # Xác định tọa độ của khu vực trạng thái
    left, top, right, bottom = win32gui.GetWindowRect(hwnd)
    status_box = (left + 110, top + 40, left + 320, top + 80)  # Tùy chỉnh tọa độ này

    # Chụp ảnh màn hình của khu vực trạng thái
    screenshot = ImageGrab.grab(bbox=status_box)
    screenshot_np = np.array(screenshot)

    return screenshot_np

def compare_images(img1, img2):
    # Chuyển đổi ảnh sang màu xám
    img1_gray = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    img2_gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)

    # Tính toán histogram của mỗi ảnh
    hist_img1 = cv2.calcHist([img1_gray], [0], None, [256], [0, 256])
    hist_img2 = cv2.calcHist([img2_gray], [0], None, [256], [0, 256])

    # Chuẩn hóa histogram
    hist_img1 = cv2.normalize(hist_img1, hist_img1)
    hist_img2 = cv2.normalize(hist_img2, hist_img2)

    # So sánh histogram
    score = cv2.compareHist(hist_img1, hist_img2, cv2.HISTCMP_CORREL)
    return score

def get_status_from_image(status_image):
    pass_score = compare_images(status_image, template_pass)
    fail_score = compare_images(status_image, template_fail)

    if pass_score > fail_score:
        return "Pass"
    else:
        return "Fail"

def open_program_and_click():
    # Mở chương trình (thay thế 'your_program.exe' bằng đường dẫn thực tế đến chương trình của bạn)
    proc = subprocess.Popen(['your_program.exe'])
    
    # Chờ chương trình mở hoàn toàn (tùy chỉnh thời gian chờ theo thực tế)
    time.sleep(10)
    
    # Tìm cửa sổ của chương trình bằng tên của nó (thay thế 'Station_Test testing tool' bằng tiêu đề cửa sổ của chương trình của bạn)
    hwnd_list = find_window('Station_Test testing tool')
    
    if hwnd_list:
        hwnd = hwnd_list[0]
        # Click nút "offline" trong cửa sổ (thay thế 'Offline' bằng text của nút trong giao diện người dùng của bạn)
        click_button_in_window(hwnd, 'Offline')

        # Nhấn Enter cho đến khi cửa sổ 'Upload' xuất hiện
        upload_hwnd = press_enter_until_upload_appears()

        if upload_hwnd:
            while True:
                # Click nút 'Start' trong cửa sổ 'Upload'
                click_button_in_window(upload_hwnd, 'Start')
                time.sleep(5)  # Chờ để trạng thái cập nhật

                # Chụp ảnh khu vực trạng thái
                status_image = capture_status_image(upload_hwnd)
                
                # Kiểm tra trạng thái bằng cách so sánh với hình mẫu
                status = get_status_from_image(status_image)
                print(f"Trạng thái: {status}")

                if status == "Pass":
                    print("Trạng thái: Pass - Đóng chương trình")
                    # Đóng chương trình
                    if win32gui.IsWindow(hwnd):
                        win32api.PostMessage(hwnd, win32con.WM_CLOSE, 0, 0)
                    proc.terminate()
                    break
                elif status == "Fail":
                    print("Trạng thái: Fail - Thử lại")
                else:
                    print("Trạng thái không xác định, thử lại")
    else:
        print("Không tìm thấy cửa sổ chương trình")

# Gọi hàm ngay lập tức để thử nghiệm
open_program_and_click()
